
using A2v10.Pdf.Report;
using System;
using System.Collections.Generic;

using A2v10.Pdf.Report.Utils;
using System.Globalization;

namespace A2v10.Pdf.Tests;

[TestClass]
[TestCategory("Spell Currency (UA)")]
public class SpellCurrency
{
	[TestMethod]
	public void SimpleUAH()
	{
		var culture = CultureInfo.CreateSpecificCulture("uk-UA");

		var dict = new Dictionary<Decimal, String>()
		{
			{ 152,      "—то пТ€тдес€т дв≥ гривн≥ 00 коп≥йок" },
			{ 1000.01M, "ќдна тис€ча гривень 01 коп≥йка" },
			{ 1782.7M,  "ќдна тис€ча с≥мсот в≥с≥мдес€т дв≥ гривн≥ 70 коп≥йок"},
			{ 1.02M,    "ќдна гривн€ 02 коп≥йки" },
			{ 2,        "ƒв≥ гривн≥ 00 коп≥йок"},
			{ 0.71M,    "Ќуль гривень 71 коп≥йка"},
			{ 219,      "ƒв≥ст≥ девТ€тнадц€ть гривень 00 коп≥йок"},
			{ 10.05M,   "ƒес€ть гривень 05 коп≥йок"},
			{ 18,   "¬≥с≥мнадц€ть гривень 00 коп≥йок"},
			{ 400,  "„отириста гривень 00 коп≥йок"},
			{ 401,  "„отириста одна гривн€ 00 коп≥йок"},
			{ 402,  "„отириста дв≥ гривн≥ 00 коп≥йок"},
			{ 2000000,  "ƒва м≥льйона гривень 00 коп≥йок"},
			{ 1000000000,  "ќдин м≥ль€рд гривень 00 коп≥йок"},
			{ 7000000,  "—≥м м≥льйон≥в гривень 00 коп≥йок"},
			{ 1782529, "ќдин м≥льйон с≥мсот в≥с≥мдес€т дв≥ тис€ч≥ пТ€тсот двадц€ть девТ€ть гривень 00 коп≥йок"},
			{ 1782524, "ќдин м≥льйон с≥мсот в≥с≥мдес€т дв≥ тис€ч≥ пТ€тсот двадц€ть чотири гривн≥ 00 коп≥йок"},
		};

		foreach (var item in dict)
		{
			Assert.AreEqual(item.Value, SpellString.SpellCurrency(item.Key, culture, "980"));
		}
	}

	[TestMethod]
	public void SimpleUSD()
	{
		var culture = CultureInfo.CreateSpecificCulture("uk-UA");

		var dict = new Dictionary<Decimal, String>()
		{
			{ 152,      "—то пТ€тдес€т два долари 00 цент≥в" },
			{ 1000.01M, "ќдна тис€ча долар≥в 01 цент" },
			{ 1782.7M,  "ќдна тис€ча с≥мсот в≥с≥мдес€т два долари 70 цент≥в"},
			{ 1.02M,    "ќдин долар 02 цента" },
			{ 2,        "ƒва долари 00 цент≥в"},
			{ 0.71M,    "Ќуль долар≥в 71 цент"},
			{ 219,      "ƒв≥ст≥ девТ€тнадц€ть долар≥в 00 цент≥в"},
			{ 10.05M,   "ƒес€ть долар≥в 05 цент≥в"},
			{ 18,   "¬≥с≥мнадц€ть долар≥в 00 цент≥в"},
			{ 400,  "„отириста долар≥в 00 цент≥в"},
			{ 401,  "„отириста один долар 00 цент≥в"},
			{ 402,  "„отириста два долари 00 цент≥в"},
			{ 2000000,  "ƒва м≥льйона долар≥в 00 цент≥в"},
			{ 1000000000,  "ќдин м≥ль€рд долар≥в 00 цент≥в"},
			{ 7000000,  "—≥м м≥льйон≥в долар≥в 00 цент≥в"},
			{ 1782529, "ќдин м≥льйон с≥мсот в≥с≥мдес€т дв≥ тис€ч≥ пТ€тсот двадц€ть девТ€ть долар≥в 00 цент≥в"},
			{ 1782524, "ќдин м≥льйон с≥мсот в≥с≥мдес€т дв≥ тис€ч≥ пТ€тсот двадц€ть чотири долари 00 цент≥в"},
		};

		foreach (var item in dict)
		{
			Assert.AreEqual(item.Value, SpellString.SpellCurrency(item.Key, culture, "840"));
		}
	}

	[TestMethod]
	public void SimpleEUR()
	{
		var culture = CultureInfo.CreateSpecificCulture("uk-UA");

		var dict = new Dictionary<Decimal, String>()
		{
			{ 152,      "—то пТ€тдес€т два Ївро 00 цент≥в" },
			{ 1000.01M, "ќдна тис€ча Ївро 01 цент" },
			{ 1782.7M,  "ќдна тис€ча с≥мсот в≥с≥мдес€т два Ївро 70 цент≥в"},
			{ 1.02M,    "ќдин Ївро 02 цента" },
			{ 2,        "ƒва Ївро 00 цент≥в"},
			{ 0.71M,    "Ќуль Ївро 71 цент"},
			{ 219,      "ƒв≥ст≥ девТ€тнадц€ть Ївро 00 цент≥в"},
			{ 10.05M,   "ƒес€ть Ївро 05 цент≥в"},
			{ 18,   "¬≥с≥мнадц€ть Ївро 00 цент≥в"},
			{ 400,  "„отириста Ївро 00 цент≥в"},
			{ 401,  "„отириста один Ївро 00 цент≥в"},
			{ 402,  "„отириста два Ївро 00 цент≥в"},
			{ 2000000,  "ƒва м≥льйона Ївро 00 цент≥в"},
			{ 1000000000,  "ќдин м≥ль€рд Ївро 00 цент≥в"},
			{ 7000000,  "—≥м м≥льйон≥в Ївро 00 цент≥в"},
			{ 1782529, "ќдин м≥льйон с≥мсот в≥с≥мдес€т дв≥ тис€ч≥ пТ€тсот двадц€ть девТ€ть Ївро 00 цент≥в"},
			{ 1782524, "ќдин м≥льйон с≥мсот в≥с≥мдес€т дв≥ тис€ч≥ пТ€тсот двадц€ть чотири Ївро 00 цент≥в"},
		};

		foreach (var item in dict)
		{
			Assert.AreEqual(item.Value, SpellString.SpellCurrency(item.Key, culture, "978"));
		}
	}

	[TestMethod]
	public void Test1()
	{
		var culture = CultureInfo.CreateSpecificCulture("uk-UA");
		Assert.AreEqual("„отириста долар≥в 00 цент≥в", SpellString.SpellCurrency(400, culture, "840"));
	}
}